{
  "name": "eslint-plugin-jest",
  "version": "22.21.0",
  "description": "Eslint rules for Jest",
  "repository": {
    "type": "git",
    "url": "git://github.com/jest-community/eslint-plugin-jest"
  },
  "license": "MIT",
  "keywords": [
    "eslint",
    "eslintplugin",
    "eslint-plugin"
  ],
  "author": {
    "name": "Jonathan Kim",
    "email": "hello@jkimbo.com",
    "url": "jkimbo.com"
  },
  "files": [
    "docs/",
    "lib/"
  ],
  "main": "lib/",
  "engines": {
    "node": ">=6"
  },
  "peerDependencies": {
    "eslint": ">=5"
  },
  "scripts": {
    "prepare": "yarn build && yarn postbuild",
    "lint": "eslint . --ignore-pattern '!.eslintrc.js' --ext js,ts",
    "prettylint": "prettylint docs/**/*.md README.md package.json",
    "prepublishOnly": "yarn build",
    "pretest": "yarn build",
    "test": "jest",
    "build": "babel --extensions .js,.ts src --out-dir lib --copy-files",
    "postbuild": "rimraf lib/**/__tests__/**",
    "typecheck": "tsc -p ."
  },
  "dependencies": {
    "@typescript-eslint/experimental-utils": "^1.13.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.4.4",
    "@babel/core": "^7.4.4",
    "@babel/preset-env": "^7.4.4",
    "@babel/preset-typescript": "^7.3.3",
    "@commitlint/cli": "^6.0.0",
    "@commitlint/config-conventional": "^6.0.0",
    "@types/eslint": "^4.16.6",
    "@types/jest": "^24.0.15",
    "@types/node": "^12.6.6",
    "@typescript-eslint/eslint-plugin": "^1.13.0",
    "@typescript-eslint/parser": "^1.13.0",
    "babel-jest": "^24.9.0",
    "babel-plugin-replace-ts-export-assignment": "^0.0.2",
    "eslint": "^5.1.0",
    "eslint-config-prettier": "^5.1.0",
    "eslint-plugin-eslint-plugin": "^2.0.0",
    "eslint-plugin-import": "^2.18.0",
    "eslint-plugin-node": "^8.0.0",
    "eslint-plugin-prettier": "^3.0.0",
    "husky": "^1.0.1",
    "jest": "^24.9.0",
    "jest-runner-eslint": "^0.7.1",
    "lint-staged": "^8.0.4",
    "prettier": "^1.10.2",
    "prettylint": "^1.0.0",
    "rimraf": "^3.0.0",
    "typescript": "^3.5.3"
  },
  "prettier": {
    "proseWrap": "always",
    "singleQuote": true,
    "trailingComma": "all"
  },
  "lint-staged": {
    "*.{js,ts}": [
      "eslint --fix",
      "git add"
    ],
    "*.{md,json}": [
      "prettier --write",
      "git add"
    ]
  },
  "jest": {
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 100,
        "lines": 100,
        "statements": 100
      }
    },
    "projects": [
      {
        "displayName": "test",
        "testEnvironment": "node",
        "testPathIgnorePatterns": [
          "<rootDir>/lib/.*"
        ]
      },
      {
        "displayName": "lint",
        "runner": "jest-runner-eslint",
        "testMatch": [
          "<rootDir>/**/*.{js,ts}"
        ],
        "testPathIgnorePatterns": [
          "<rootDir>/lib/.*"
        ]
      }
    ]
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -e $HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged"
    }
  },
  "readme": "[![Build Status](https://travis-ci.org/jest-community/eslint-plugin-jest.svg?branch=master)](https://travis-ci.org/jest-community/eslint-plugin-jest)\n[![Greenkeeper badge](https://badges.greenkeeper.io/jest-community/eslint-plugin-jest.svg)](https://greenkeeper.io/)\n\n<div align=\"center\">\n  <a href=\"https://eslint.org/\">\n    <img width=\"150\" height=\"150\" src=\"https://eslint.org/assets/img/logo.svg\">\n  </a>\n  <a href=\"https://facebook.github.io/jest/\">\n    <img width=\"150\" height=\"150\" vspace=\"\" hspace=\"25\" src=\"https://jestjs.io/img/jest.png\">\n  </a>\n  <h1>eslint-plugin-jest</h1>\n  <p>ESLint plugin for Jest</p>\n</div>\n\n## Installation\n\n```\n$ yarn add --dev eslint eslint-plugin-jest\n```\n\n**Note:** If you installed ESLint globally then you must also install\n`eslint-plugin-jest` globally.\n\n## Usage\n\nAdd `jest` to the plugins section of your `.eslintrc` configuration file. You\ncan omit the `eslint-plugin-` prefix:\n\n```json\n{\n  \"plugins\": [\"jest\"]\n}\n```\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n  \"rules\": {\n    \"jest/no-disabled-tests\": \"warn\",\n    \"jest/no-focused-tests\": \"error\",\n    \"jest/no-identical-title\": \"error\",\n    \"jest/prefer-to-have-length\": \"warn\",\n    \"jest/valid-expect\": \"error\"\n  }\n}\n```\n\nYou can also whitelist the environment variables provided by Jest by doing:\n\n```json\n{\n  \"env\": {\n    \"jest/globals\": true\n  }\n}\n```\n\n## Shareable configurations\n\n### Recommended\n\nThis plugin exports a recommended configuration that enforces good testing\npractices.\n\nTo enable this configuration use the `extends` property in your `.eslintrc`\nconfig file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/recommended\"]\n}\n```\n\n### Style\n\nThis plugin also exports a configuration named `style`, which adds some\nstylistic rules, such as `prefer-to-be-null`, which enforces usage of `toBeNull`\nover `toBe(null)`.\n\nTo enable this configuration use the `extends` property in your `.eslintrc`\nconfig file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/style\"]\n}\n```\n\nSee\n[ESLint documentation](http://eslint.org/docs/user-guide/configuring#extending-configuration-files)\nfor more information about extending configuration files.\n\n### All\n\nIf you want to enable all rules instead of only some you can do so by adding the\n`all` configuration to your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/all\"]\n}\n```\n\nWhile the `recommended` and `style` configurations only change in major versions\nthe `all` configuration may change in any release and is thus unsuited for\ninstallations requiring long-term consistency.\n\n## Rules\n\n| Rule                           | Description                                                       | Configurations   | Fixable             |\n| ------------------------------ | ----------------------------------------------------------------- | ---------------- | ------------------- |\n| [consistent-test-it][]         | Enforce consistent test or it keyword                             |                  | ![fixable-green][]  |\n| [expect-expect][]              | Enforce assertion to be made in a test body                       |                  |                     |\n| [lowercase-name][]             | Disallow capitalized test names                                   |                  | ![fixable-green][]  |\n| [no-alias-methods][]           | Disallow alias methods                                            | ![recommended][] | ![fixable-green][]  |\n| [no-commented-out-tests][]     | Disallow commented out tests                                      |                  |                     |\n| [no-disabled-tests][]          | Disallow disabled tests                                           | ![recommended][] |                     |\n| [no-duplicate-hooks][]         | Disallow duplicate hooks within a `describe` block                |                  |                     |\n| [no-empty-title][]             | Disallow empty titles                                             |                  |                     |\n| [no-expect-resolves][]         | Disallow using `expect().resolves`                                |                  |                     |\n| [no-export][]                  | Disallow export from test files                                   |                  |                     |\n| [no-focused-tests][]           | Disallow focused tests                                            | ![recommended][] |                     |\n| [no-hooks][]                   | Disallow setup and teardown hooks                                 |                  |                     |\n| [no-identical-title][]         | Disallow identical titles                                         | ![recommended][] |                     |\n| [no-if][]                      | Disallow conditional logic                                        |                  |                     |\n| [no-jasmine-globals][]         | Disallow Jasmine globals                                          | ![recommended][] | ![fixable-yellow][] |\n| [no-jest-import][]             | Disallow importing `jest`                                         | ![recommended][] |                     |\n| [no-large-snapshots][]         | Disallow large snapshots                                          |                  |                     |\n| [no-mocks-import][]            | Disallow manually importing from `__mocks__`                      |                  |                     |\n| [no-standalone-expect][]       | Prevents `expect` statements outside of a `test` or `it` block    |                  |                     |\n| [no-test-callback][]           | Using a callback in asynchronous tests                            |                  | ![fixable-green][]  |\n| [no-test-prefixes][]           | Disallow using `f` & `x` prefixes to define focused/skipped tests | ![recommended][] | ![fixable-green][]  |\n| [no-test-return-statement][]   | Disallow explicitly returning from tests                          |                  |                     |\n| [no-truthy-falsy][]            | Disallow using `toBeTruthy()` & `toBeFalsy()`                     |                  |                     |\n| [no-try-expect][]              | Prevent `catch` assertions in tests                               |                  |                     |\n| [prefer-called-with][]         | Suggest using `toBeCalledWith()` OR `toHaveBeenCalledWith()`      |                  |                     |\n| [prefer-expect-assertions][]   | Suggest using `expect.assertions()` OR `expect.hasAssertions()`   |                  |                     |\n| [prefer-hooks-on-top][]        | Suggest to have all hooks at top-level before tests               |                  |                     |\n| [prefer-inline-snapshots][]    | Suggest using `toMatchInlineSnapshot()`                           |                  | ![fixable-green][]  |\n| [prefer-spy-on][]              | Suggest using `jest.spyOn()`                                      |                  | ![fixable-green][]  |\n| [prefer-strict-equal][]        | Suggest using `toStrictEqual()`                                   |                  | ![fixable-green][]  |\n| [prefer-to-be-null][]          | Suggest using `toBeNull()`                                        | ![style][]       | ![fixable-green][]  |\n| [prefer-to-be-undefined][]     | Suggest using `toBeUndefined()`                                   | ![style][]       | ![fixable-green][]  |\n| [prefer-to-contain][]          | Suggest using `toContain()`                                       | ![style][]       | ![fixable-green][]  |\n| [prefer-to-have-length][]      | Suggest using `toHaveLength()`                                    | ![style][]       | ![fixable-green][]  |\n| [prefer-todo][]                | Suggest using `test.todo()`                                       |                  | ![fixable-green][]  |\n| [require-top-level-describe][] | Require a top-level `describe` block                              |                  |                     |\n| [require-tothrow-message][]    | Require that `toThrow()` and `toThrowError` includes a message    |                  |                     |\n| [valid-describe][]             | Enforce valid `describe()` callback                               | ![recommended][] |                     |\n| [valid-expect-in-promise][]    | Enforce having return statement when testing with promises        | ![recommended][] |                     |\n| [valid-expect][]               | Enforce valid `expect()` usage                                    | ![recommended][] |                     |\n| [valid-title][]                | Enforce valid titles for jest blocks                              |                  |                     |\n\n## Credit\n\n- [eslint-plugin-mocha](https://github.com/lo1tuma/eslint-plugin-mocha)\n- [eslint-plugin-jasmine](https://github.com/tlvince/eslint-plugin-jasmine)\n\n## Related Projects\n\n### eslint-plugin-jest-formatting\n\nThis project aims to provide formatting rules (auto-fixable where possible) to\nensure consistency and readability in jest test suites.\n\nhttps://github.com/dangreenisrael/eslint-plugin-jest-formatting\n\n[consistent-test-it]: docs/rules/consistent-test-it.md\n[expect-expect]: docs/rules/expect-expect.md\n[lowercase-name]: docs/rules/lowercase-name.md\n[no-alias-methods]: docs/rules/no-alias-methods.md\n[no-commented-out-tests]: docs/rules/no-commented-out-tests.md\n[no-disabled-tests]: docs/rules/no-disabled-tests.md\n[no-duplicate-hooks]: docs/rules/no-duplicate-hooks.md\n[no-empty-title]: docs/rules/no-empty-title.md\n[no-expect-resolves]: docs/rules/no-expect-resolves.md\n[no-export]: docs/rules/no-export.md\n[no-focused-tests]: docs/rules/no-focused-tests.md\n[no-hooks]: docs/rules/no-hooks.md\n[no-identical-title]: docs/rules/no-identical-title.md\n[no-if]: docs/rules/no-if.md\n[no-jasmine-globals]: docs/rules/no-jasmine-globals.md\n[no-jest-import]: docs/rules/no-jest-import.md\n[no-large-snapshots]: docs/rules/no-large-snapshots.md\n[no-mocks-import]: docs/rules/no-mocks-import.md\n[no-standalone-expect]: docs/rules/no-standalone-expect.md\n[no-test-callback]: docs/rules/no-test-callback.md\n[no-test-prefixes]: docs/rules/no-test-prefixes.md\n[no-test-return-statement]: docs/rules/no-test-return-statement.md\n[no-truthy-falsy]: docs/rules/no-truthy-falsy.md\n[no-try-expect]: docs/rules/no-try-expect.md\n[prefer-called-with]: docs/rules/prefer-called-with.md\n[prefer-expect-assertions]: docs/rules/prefer-expect-assertions.md\n[prefer-inline-snapshots]: docs/rules/prefer-inline-snapshots.md\n[prefer-hooks-on-top]: docs/rules/prefer-hooks-on-top.md\n[prefer-spy-on]: docs/rules/prefer-spy-on.md\n[prefer-strict-equal]: docs/rules/prefer-strict-equal.md\n[prefer-to-be-null]: docs/rules/prefer-to-be-null.md\n[prefer-to-be-undefined]: docs/rules/prefer-to-be-undefined.md\n[prefer-to-contain]: docs/rules/prefer-to-contain.md\n[prefer-to-have-length]: docs/rules/prefer-to-have-length.md\n[prefer-todo]: docs/rules/prefer-todo.md\n[require-top-level-describe]: docs/rules/require-top-level-describe.md\n[require-tothrow-message]: docs/rules/require-tothrow-message.md\n[valid-describe]: docs/rules/valid-describe.md\n[valid-expect-in-promise]: docs/rules/valid-expect-in-promise.md\n[valid-expect]: docs/rules/valid-expect.md\n[valid-title]: docs/rules/valid-title.md\n[fixable-green]: https://img.shields.io/badge/-fixable-green.svg\n[fixable-yellow]: https://img.shields.io/badge/-fixable-yellow.svg\n[recommended]: https://img.shields.io/badge/-recommended-lightgrey.svg\n[style]: https://img.shields.io/badge/-style-blue.svg\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jest-community/eslint-plugin-jest/issues"
  },
  "_id": "eslint-plugin-jest@22.21.0",
  "_from": "eslint-plugin-jest@^22.17.0"
}
